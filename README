# Data loader implementation with Fast API and Strawberry.

## Local setup

### Tools

- Docker
- GNU make
- Poetry

### Commands

```sh
# Install dependencies and create a virtual environment
poetry install

# Activate the virtual environment. We never use globally installed Python
poetry shell

# Start the database container
make db-up

# Run database migrations
make db-migrate

# Seed the database
make db-seed

# Start the development server
make dev
```

## Batching

**Fetch the books**

```gql
query {
  books {
    title
    id
    reviews {
      comment
    }
  }
}
```

I Naive application make 5 roundtrips to the db for the review table. With the data loader artifact we make one.

See the logs.

## Docs reference

- [Data loader](https://github.com/graphql/dataloader)
- [Strawberry Data Loader](https://strawberry.rocks/docs/guides/dataloaders#dataloaders)
